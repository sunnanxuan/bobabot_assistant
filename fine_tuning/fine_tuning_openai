{"cells":[{"cell_type":"markdown","metadata":{"id":"nU6AVuvzqDu1"},"source":["## **链接到谷歌云盘**\n","\n","\n","\n"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"_eocowUDLKIM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1758658505855,"user_tz":420,"elapsed":934,"user":{"displayName":"Nanxuan Sun","userId":"05565701523867827861"}},"outputId":"7a4b58af-db4a-47df-d186-efbf2e23cf3f"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","metadata":{"id":"Gq4QA-Tlr_NJ"},"source":["## **1.安装依赖**\n"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"Nf_ibxWDr7zC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1758658526759,"user_tz":420,"elapsed":16001,"user":{"displayName":"Nanxuan Sun","userId":"05565701523867827861"}},"outputId":"e3404bbf-9b52-4989-fc31-3bf404bc9cc2"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: openai in /usr/local/lib/python3.12/dist-packages (1.109.0)\n","Requirement already satisfied: anyio<5,>=3.5.0 in /usr/local/lib/python3.12/dist-packages (from openai) (4.10.0)\n","Requirement already satisfied: distro<2,>=1.7.0 in /usr/local/lib/python3.12/dist-packages (from openai) (1.9.0)\n","Requirement already satisfied: httpx<1,>=0.23.0 in /usr/local/lib/python3.12/dist-packages (from openai) (0.28.1)\n","Requirement already satisfied: jiter<1,>=0.4.0 in /usr/local/lib/python3.12/dist-packages (from openai) (0.11.0)\n","Requirement already satisfied: pydantic<3,>=1.9.0 in /usr/local/lib/python3.12/dist-packages (from openai) (2.11.9)\n","Requirement already satisfied: sniffio in /usr/local/lib/python3.12/dist-packages (from openai) (1.3.1)\n","Requirement already satisfied: tqdm>4 in /usr/local/lib/python3.12/dist-packages (from openai) (4.67.1)\n","Requirement already satisfied: typing-extensions<5,>=4.11 in /usr/local/lib/python3.12/dist-packages (from openai) (4.15.0)\n","Requirement already satisfied: idna>=2.8 in /usr/local/lib/python3.12/dist-packages (from anyio<5,>=3.5.0->openai) (3.10)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.12/dist-packages (from httpx<1,>=0.23.0->openai) (2025.8.3)\n","Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.12/dist-packages (from httpx<1,>=0.23.0->openai) (1.0.9)\n","Requirement already satisfied: h11>=0.16 in /usr/local/lib/python3.12/dist-packages (from httpcore==1.*->httpx<1,>=0.23.0->openai) (0.16.0)\n","Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.12/dist-packages (from pydantic<3,>=1.9.0->openai) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.33.2 in /usr/local/lib/python3.12/dist-packages (from pydantic<3,>=1.9.0->openai) (2.33.2)\n","Requirement already satisfied: typing-inspection>=0.4.0 in /usr/local/lib/python3.12/dist-packages (from pydantic<3,>=1.9.0->openai) (0.4.1)\n","Requirement already satisfied: load_dotenv in /usr/local/lib/python3.12/dist-packages (0.1.0)\n","Requirement already satisfied: python-dotenv in /usr/local/lib/python3.12/dist-packages (from load_dotenv) (1.1.1)\n"]}],"source":["!pip install --upgrade openai\n","!pip install load_dotenv"]},{"cell_type":"markdown","metadata":{"id":"-IIXlk0PtFs0"},"source":["## **2.引入openai环境**\n"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"llaD5Wv-qDu4","executionInfo":{"status":"ok","timestamp":1758658532308,"user_tz":420,"elapsed":68,"user":{"displayName":"Nanxuan Sun","userId":"05565701523867827861"}}},"outputs":[],"source":["import openai\n","import os\n","from dotenv import load_dotenv, find_dotenv\n","_ = load_dotenv('/content/drive/MyDrive/Colab/.env')\n","\n","openai.api_key  = os.environ['OPENAI_API_KEY']"]},{"cell_type":"markdown","source":["## **3.设置路径 & 快速校验**\n"],"metadata":{"id":"NVoNlW3_1let"}},{"cell_type":"code","source":["DATA_PATH = \"/content/drive/MyDrive/openai/data/milk_tea_dataset.jsonl\"\n","\n","# 查看大小和前两行，确认存在且是 JSONL\n","import os, itertools, json\n","print(\"Exists:\", os.path.exists(DATA_PATH), \"Size(bytes):\", os.path.getsize(DATA_PATH))\n","\n","with open(DATA_PATH, \"r\", encoding=\"utf-8\") as f:\n","    for i, line in zip(range(2), f):\n","        print(\"Sample\", i+1, \":\", line[:200])"],"metadata":{"id":"NKJpdF791VLF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1758658534851,"user_tz":420,"elapsed":389,"user":{"displayName":"Nanxuan Sun","userId":"05565701523867827861"}},"outputId":"2b43b03d-9ceb-4151-d903-7c4827cf64b1"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Exists: True Size(bytes): 1441942\n","Sample 1 : {\"messages\": [{\"role\": \"system\", \"content\": \"你是“BobaBot”，一家奶茶店的智能店员。严格流程：1) 先确定具体饮品；2) 是否加小料；3) 杯型/甜度/冰量；4) 打包需求；5) 报价并给订单摘要；6) 等用户回“确认订单”；7) 再引导回“确认下单”；8) 收到“确认下单”才提交。禁止编造菜单和价格；果茶仅冷饮；中文自然语言；每步给下一步引导。\n","Sample 2 : {\"messages\": [{\"role\": \"system\", \"content\": \"你是奶茶店服务员。回答必须是中文自然语言，不要使用 Markdown 或 JSON；只从门店菜单回答；果茶类只能冷饮；信息不全先澄清；结尾给出下一步引导。\"}, {\"role\": \"user\", \"content\": \"豆乳玉麒麟 这杯默认自带哪些配料？\"}, {\"role\": \"assistant\", \"c\n"]}]},{"cell_type":"markdown","metadata":{"id":"b1n-zQ5Lv59O"},"source":["## **4.上传数据**\n"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"ntaUzoOhqDu5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1758658541705,"user_tz":420,"elapsed":1180,"user":{"displayName":"Nanxuan Sun","userId":"05565701523867827861"}},"outputId":"bd656cb4-885a-42c0-9e2c-74928bc0dcf5"},"outputs":[{"output_type":"stream","name":"stdout","text":["train_file.id = file-JrVxyfC5xAgin5wRCZBPxi\n"]}],"source":["from openai import OpenAI\n","client = OpenAI()\n","\n","\n","client = OpenAI()\n","train_file = client.files.create(\n","    file=open(DATA_PATH, \"rb\"),\n","    purpose=\"fine-tune\"\n",")\n","print(\"train_file.id =\", train_file.id)"]},{"cell_type":"markdown","metadata":{"id":"mikUtQOgqDu6"},"source":["## **5.创建fine-tuning任务**\n"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"itw_-upIqDu6","executionInfo":{"status":"ok","timestamp":1758658546239,"user_tz":420,"elapsed":988,"user":{"displayName":"Nanxuan Sun","userId":"05565701523867827861"}}},"outputs":[],"source":["job = client.fine_tuning.jobs.create(\n","    training_file=train_file.id,\n","    model=\"gpt-4o-mini-2024-07-18\",\n","    hyperparameters={\"n_epochs\": 2},\n","    suffix=\"boba-bot-v3\"\n",")\n"]},{"cell_type":"markdown","metadata":{"id":"zm9SXorlqDu6"},"source":["## **6.查看状态 / 日志**\n"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"x-o3ulotqDu6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1758660404896,"user_tz":420,"elapsed":440,"user":{"displayName":"Nanxuan Sun","userId":"05565701523867827861"}},"outputId":"65504c27-e79a-4b27-d090-bb916f4ac2d4"},"outputs":[{"output_type":"stream","name":"stdout","text":["status: running model: None\n","1758660383 info Step 1239/1654: training loss=0.00\n","1758660386 info Step 1240/1654: training loss=0.00\n","1758660386 info Step 1241/1654: training loss=0.00\n","1758660386 info Step 1242/1654: training loss=0.00\n","1758660389 info Step 1243/1654: training loss=0.00\n","1758660389 info Step 1244/1654: training loss=0.00\n","1758660389 info Step 1245/1654: training loss=0.01\n","1758660389 info Step 1246/1654: training loss=0.01\n","1758660393 info Step 1247/1654: training loss=0.00\n","1758660393 info Step 1248/1654: training loss=0.00\n","1758660393 info Step 1249/1654: training loss=0.00\n","1758660393 info Step 1250/1654: training loss=0.00\n","1758660396 info Step 1251/1654: training loss=0.00\n","1758660396 info Step 1252/1654: training loss=0.00\n","1758660396 info Step 1253/1654: training loss=0.01\n","1758660399 info Step 1254/1654: training loss=0.00\n","1758660399 info Step 1255/1654: training loss=0.00\n","1758660399 info Step 1256/1654: training loss=0.02\n","1758660399 info Step 1257/1654: training loss=0.00\n","1758660402 info Step 1258/1654: training loss=0.02\n"]}],"source":["job = client.fine_tuning.jobs.retrieve(job.id)\n","print(\"status:\", job.status, \"model:\", job.fine_tuned_model)\n","\n","events = client.fine_tuning.jobs.list_events(job.id, limit=20)\n","for ev in reversed(events.data):\n","    # 常见字段：created_at, level, message\n","    print(ev.created_at, ev.level, ev.message)"]},{"cell_type":"markdown","metadata":{"id":"hZ29g1Ib0sUW"},"source":["## **7.测试模型**\n","通过Completion API，对微调成功的模型进行效果测试。\n","我们可以按正常GPT模型，例如GPT-3.5-turbo的调用方式，来调用微调好的模型，访问参数完全相同。"]},{"cell_type":"code","source":["from openai import OpenAI\n","client = OpenAI()\n","\n","ft_model = \"ft:gpt-4o-mini-2024-07-18:personal:boba-bot-v3:CJ4It6Rz\"\n","\n","sys_prompt = (\n","    \"你是一名奶茶店服务员。请用简洁礼貌的中文回复，先澄清未确定的信息。\"\n","    \"规则：1) 不要编造价格/库存/制作时长；2) 优先确认杯型、糖度、冰量、加料；\"\n","    \"3) 遇到抱怨先致歉并给可执行方案；4) 不确定时说明不确定并给下一步建议。\"\n",")\n","\n","completion = client.chat.completions.create(\n","    model=ft_model,\n","    messages=[\n","        {\"role\": \"system\", \"content\": sys_prompt},\n","        {\"role\": \"user\", \"content\": \"我想喝奶茶，你有什么推荐？\"}\n","    ],\n","    temperature=0.3\n",")\n","\n","print(completion.choices[0].message.content)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KGKr3d-UXCts","executionInfo":{"status":"ok","timestamp":1758661739847,"user_tz":420,"elapsed":3289,"user":{"displayName":"Nanxuan Sun","userId":"05565701523867827861"}},"outputId":"e1202035-a6af-4898-e903-6d618be75f9f"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["可以的，推荐幽兰拿铁或手捣芋头奶绿。请确认杯型、糖度和冰量。需要我为您确认杯型、甜度和冰量吗？\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"https://gist.github.com/sunnanxuan/bcd805e2bb5696d76e01fbdb7cc64b44#file-fine-tuning-ipynb","timestamp":1758249353843}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.3"},"orig_nbformat":4},"nbformat":4,"nbformat_minor":0}